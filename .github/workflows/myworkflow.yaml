name: myghaction
on: 
  push:
    branches: [main]
    
jobs: 
  build:
      runs-on: ubuntu-latest
      
      steps:
        - name: Log repo name to console
          run: echo 'Repository name = $GITHUB_REPOSITORY'
        
        - uses: actions/checkout@v2
        - name: build container image and push to registry  
          uses: docker/build-push-action@v1
          with:
            username: ${{ secrets.ACR_USERNAME }}
            password: ${{ secrets.ACR_PASSWORD }}
            login-server: githubactionsworkshop.azurecr.io
            repository: mosoftwareenterprises/actions-workshop
            tags: latest,${{ github.sha}}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: azure/login@v1.1.
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
       
      - uses : 'azure/aci-deploy@v1'
        id: aci-deploy
        with:
          # Name of the Resource Group in which the Container Instance will be created
          resource-group:     
          # The DNS Name Label for Container with Public IP
          dns-name-label: 
          # List of environment variables for the container. Space-seperated in "key=value" format
          environment-variables: # optional, default is 
          # The target directory path in the git repository. Must not contain ".."
          gitrepo-dir: # optional, default is 
          # The path within the container where the git repo volume should be mounted. Must not contain ":"
          gitrepo-mount-path: # optional, default is 
          # The commit hash for the specified revision
          gitrepo-revision: # optional, default is 
          # The URL of a git repository to be mounted as a volume
          gitrepo-url: # optional, default is 
          # The Number of GPU Resources needed in the Container
          gpu-count: # optional, default is 
          # The SKU for the GPUs specified. Accepted Values are { K80, P100, V100 }
          gpu-sku: # optional, default is 
          # Specify the fully qualified container image name. For example, "myregistry.azurecr.io/nginx:latest" or "python:3.7.2-alpine/"
          image:  mosoftwareenterprises/actions-workshop:${{ github.sha }}
          # IP Address type of the Container Group. Accepted Values are { Private, Public }
          ip-address: # optional, default is Public
          # Location where the Container will be deployed
          location: 
          # The Log Analytics Workspace Name or Id
          log-analytics-workspace: # optional
          # The Log Analytics Workspace Key
          log-analytics-workspace-key: # optional
          # The Log type to be used. Accepted Values are { ContainerInsights, ContainerInstanceLogs }
          log-type: # optional
          # Required Memory of the Containers in GB, accurate to one decimal place
          memory: # optional, default is 1.5
          # Name of the Container Group Instance
          name: 
          # The OS type of the Containers. Accepted Values are  { Linux, Windows }
          os-type: # optional, default is Linux
          # The Ports to Open on the Container. Space seperate the ports for multiple values
          ports: # optional, default is 80
          # The Network protocol to use. Accepted Values are { TCP, UDP }
          protocol: # optional, default is TCP
          # The container image registry login server
          registry-login-server: # optional, default is 
          # Username to log in Container Image Registry Server
          registry-username: # optional, default is 
          # Password to log in Container Image Registry Server
          registry-password: # optional, default is 
          # Restart Policy for the container(s). Accepted Values are { Always, OnFailure, Never }
          restart-policy: # optional, default is Always
          # List of secure environment variables for the container. Space seperated values in "key=value" format
          secure-environment-variables: # optional, default is           
